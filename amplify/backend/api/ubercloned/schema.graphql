type User
  @model
  @auth(
    rules: [
      {allow: owner, operations: [create, update, delete, read]}
      {allow: private, operations: [create, update, delete, read]}
      {allow: public, operations: [create, update, delete, read]}
    ]
  ) {
  id: ID!
  username: String!
  email: String!
  orders: [Order] @hasMany
  carId: ID
  car: Car @hasOne(fields: ["carId"])
}

type Car
  @model
  @auth(
    rules: [
      {allow: owner, operations: [create, update, delete, read]}
      {allow: private, operations: [create, update, delete, read]}
      {allow: public, operations: [create, update, delete, read]}
    ]
  ) {
  id: ID!
  type: String!
  latitude: Float
  longitude: Float
  heading: Float
  isActive: Boolean
  orders: [Order] @hasMany

  userId: ID!
  user: User @belongsTo(fields: ["userId"])
}

type Order
  @model
  @auth(
    rules: [
      {allow: owner, operations: [create, update, delete, read]}
      {allow: private, operations: [create, update, delete, read]}
      {allow: public, operations: [create, update, delete, read]}
    ]
  ) {
  id: ID!
  createdAt: String!

  type: String!
  status: String

  originLatitude: Float!
  originLongitude: Float!

  destinationLatitude: Float!
  destinationLongitude: Float!

  userId: ID!
  user: User @belongsTo

  carId: ID!
  car: Car @belongsTo
}
