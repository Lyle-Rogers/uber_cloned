type User @model
  @auth(
    rules: [
      { allow: owner, operations: [create, update, delete, read] },
      { allow: private, operations: [create, update, delete, read] },
      { allow: public, operations: [create, update, delete, read] }
    ]
  ) {
  id: ID!
  username: String!
  email: String!
  orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
}

type Car @model
  @auth(
    rules: [
      { allow: owner, operations: [create, update, delete, read] },
      { allow: private, operations: [create, update, delete, read] },
      { allow: public, operations: [create, update, delete, read] }
    ]
  ) {
  id: ID!
  type: String!
  latitude: Float,
  longitude: Float,
  heading: Float,
  orders: [Order] @hasMany(indexName: "byCar", fields: ["id"])
}

type Order @model
  @auth(
    rules: [
      { allow: owner, operations: [create, update, delete, read] },
      { allow: private, operations: [create, update, delete, read] },
      { allow: public, operations: [create, update, delete, read] }
    ]
  ) {
  id: ID!
  createdAt: String!

  type: String!

  originLatitude: Float!
  originLongitude: Float!

  destinationLatitude: Float!
  destinationLongitude: Float!

  userId: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["userId"])

  carId: ID! @index(name: "byCar")
  car: Car @belongsTo(fields: ["carId"])
}
